stages:
  - prepare
  - build_and_test
  - deploy

variables:
  BUILD_NAME: SafariEmpire
  UNITY_VERSION: 6000.0.41f1
  UNITY_DIR: $CI_PROJECT_DIR/SafariEmpire
  VERSION_NUMBER_VAR: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID-$CI_JOB_ID
  VERSION_BUILD_VAR: $CI_PIPELINE_IID

image: unityci/editor:6000.0.41f1-base-3

default:
  tags: [ unity ]

.unity_before_script: &unity_before_script
  before_script:
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.unity_after_script: &unity_after_script
  after_script:
    - chmod +x ./ci/return_license.sh && ./ci/return_license.sh

.cache: &cache
  cache:
    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
    paths:
      - $UNITY_DIR/Library/
      - ../unity-builder

.license: &license
  rules:
    - if: "$UNITY_LICENSE != null || $UNITY_SERIAL != null"
      when: always

.unity_defaults: &unity_defaults
  <<:
    - *unity_before_script
    - *cache
    - *license
    - *unity_after_script

.test: &test
  stage: build_and_test
  <<: *unity_defaults
  script:
    - chmod +x ./ci/test.sh && ./ci/test.sh
  artifacts:
    when: always
    expire_in: 2 weeks
  coverage: /<Linecoverage>(.*?)</Linecoverage>/

.test-with-junit-reports: &test-with-junit-reports
  stage: build_and_test
  <<: *unity_defaults
  script:
    - apt-get update && apt-get install -y default-jre libsaxonb-java
    - chmod +x ./ci/test.sh && ./ci/test.sh
    - saxonb-xslt -s $UNITY_DIR/$TEST_PLATFORM-results.xml -xsl $CI_PROJECT_DIR/ci/nunit-transforms/nunit3-junit.xslt >$UNITY_DIR/$TEST_PLATFORM-junit-results.xml
  artifacts:
    when: always
    paths:
      - $UNITY_DIR/$TEST_PLATFORM-coverage/
    reports:
      junit:
        - $UNITY_DIR/$TEST_PLATFORM-junit-results.xml
        - "$UNITY_DIR/$TEST_PLATFORM-coverage/coverage.xml"
    expire_in: 2 weeks
  coverage: /<Linecoverage>(.*?)</Linecoverage>/

test-playmode-with-junit-reports:
  <<: *test-with-junit-reports
  variables:
    TEST_PLATFORM: playmode
    TESTING_TYPE: JUNIT

test-editmode-with-junit-reports:
  <<: *test-with-junit-reports
  variables:
    TEST_PLATFORM: editmode
    TESTING_TYPE: JUNIT

.build: &build
  stage: build_and_test
  <<: *unity_defaults
  script:
    - chmod +x ./ci/build.sh && ./ci/build.sh
  artifacts:
    paths:
      - $UNITY_DIR/Builds/

build-StandaloneWindows64:
  <<: *build
  image: unityci/editor:6000.0.41f1-windows-mono-3
  variables:
    BUILD_TARGET: StandaloneWindows64

pages:
  image: alpine:latest
  stage: deploy
  script:
    - mv "$UNITY_DIR/Builds/WebGL/${BUILD_NAME}" public
  artifacts:
    paths:
      - public
  only:
    - $CI_DEFAULT_BRANCH

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
